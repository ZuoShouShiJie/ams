<!DOCTYPE table SYSTEM "../config/table-config-1.0.dtd">
<table sqlname="AMS_ACCOUNT_EARNINGS" physicalName="AMS_ACCOUNT_EARNINGS" remark="AMS_ACCOUNT_EARNINGS">
    <!--  特殊字符说明  &lt;&gt;   <> -->

    <operation name="insert" paramtype="object" remark="插入表:AMS_ACCOUNT_EARNINGS">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        INSERT INTO AMS_ACCOUNT_EARNINGS(
            ID
            ,BO_ID
            ,ORG_ID
            ,STATUS
            ,BO_USER_ID
            ,ACCOUNT_ID
            ,CREATED_BY
            ,IS_FULL_FEE
            ,PERIOD_NUM
            ,REPAY_DATE
            ,UPDATED_BY
            ,OVERDUE_DAY
            ,CREATED_TIME
            ,REPAY_STATUS
            ,UPDATED_TIME
            ,SERVICE_FEE_ID
            ,CAPITAL_AMOUNT
            ,PUNISH_FEE_ACCU
            ,REAL_REPAY_DATE
            ,INTEREST_AMOUNT
            ,SERVICE_FEE_ACCU
            ,PUNISH_UPDATED_TIME
            ,MERCHANT_SERVICE_FEE
        )VALUES(
             #{id,jdbcType=INTEGER}
            , #{boId,jdbcType=VARCHAR}
            , #{orgId,jdbcType=INTEGER}
            , #{status,jdbcType=VARCHAR}
            , #{boUserId,jdbcType=VARCHAR}
            , #{accountId,jdbcType=VARCHAR}
            , #{createdBy,jdbcType=VARCHAR}
            , #{isFullFee,jdbcType=VARCHAR}
            , #{periodNum,jdbcType=VARCHAR}
            , #{repayDate,jdbcType=VARCHAR}
            , #{updatedBy,jdbcType=VARCHAR}
            , #{overdueDay,jdbcType=VARCHAR}
            , #{createdTime,jdbcType=TIMESTAMP}
            , #{repayStatus,jdbcType=VARCHAR}
            , #{updatedTime,jdbcType=TIMESTAMP}
            , #{serviceFeeId,jdbcType=VARCHAR}
            , #{capitalAmount,jdbcType=DECIMAL}
            , #{punishFeeAccu,jdbcType=DECIMAL}
            , #{realRepayDate,jdbcType=VARCHAR}
            , #{interestAmount,jdbcType=DECIMAL}
            , #{serviceFeeAccu,jdbcType=DECIMAL}
            , #{punishUpdatedTime,jdbcType=TIMESTAMP}
            , #{merchantServiceFee,jdbcType=DECIMAL}
        )
    </operation>

    <operation name="update" paramtype="object" remark="更新表:AMS_ACCOUNT_EARNINGS">
        UPDATE AMS_ACCOUNT_EARNINGS
        SET
            BO_ID           = #{boId,jdbcType=VARCHAR}
            ,STATUS          = #{status,jdbcType=VARCHAR}
            ,BO_USER_ID      = #{boUserId,jdbcType=VARCHAR}
            ,ACCOUNT_ID      = #{accountId,jdbcType=VARCHAR}
            ,CREATED_BY      = #{createdBy,jdbcType=VARCHAR}
            ,IS_FULL_FEE     = #{isFullFee,jdbcType=VARCHAR}
            ,PERIOD_NUM      = #{periodNum,jdbcType=VARCHAR}
            ,REPAY_DATE      = #{repayDate,jdbcType=VARCHAR}
            ,UPDATED_BY      = #{updatedBy,jdbcType=VARCHAR}
            ,OVERDUE_DAY     = #{overdueDay,jdbcType=VARCHAR}
            ,CREATED_TIME    = #{createdTime,jdbcType=TIMESTAMP}
            ,REPAY_STATUS    = #{repayStatus,jdbcType=VARCHAR}
            ,UPDATED_TIME    = #{updatedTime,jdbcType=TIMESTAMP}
            ,SERVICE_FEE_ID  = #{serviceFeeId,jdbcType=VARCHAR}
            ,CAPITAL_AMOUNT  = #{capitalAmount,jdbcType=DECIMAL}
            ,PUNISH_FEE_ACCU = #{punishFeeAccu,jdbcType=DECIMAL}
            ,REAL_REPAY_DATE = #{realRepayDate,jdbcType=VARCHAR}
            ,INTEREST_AMOUNT = #{interestAmount,jdbcType=DECIMAL}
            ,SERVICE_FEE_ACCU = #{serviceFeeAccu,jdbcType=DECIMAL}
            ,PUNISH_UPDATED_TIME = #{punishUpdatedTime,jdbcType=TIMESTAMP}
            ,MERCHANT_SERVICE_FEE = #{merchantServiceFee,jdbcType=DECIMAL}
        WHERE
            ID              = #{id,jdbcType=INTEGER}
            AND ORG_ID          = #{orgId,jdbcType=INTEGER}
    </operation>

    <operation name="deleteByPrimary" multiplicity="one" remark="根据主键删除数据:AMS_ACCOUNT_EARNINGS">
        DELETE FROM
            AMS_ACCOUNT_EARNINGS
        WHERE
            ID = #{id,jdbcType=INTEGER}
            AND ORG_ID = #{orgId,jdbcType=INTEGER}
    </operation>

    <operation name="getByPrimary" multiplicity="one" remark="根据主键获取数据:AMS_ACCOUNT_EARNINGS">
        SELECT *
        FROM AMS_ACCOUNT_EARNINGS
        WHERE
            ID = #{id,jdbcType=INTEGER}
            AND ORG_ID = #{orgId,jdbcType=INTEGER}
    </operation>
    <operation name="queryPlatEarnings"  resulttype="com.dzjk.ams.dal.dataobject.AccountEarningsExDO" multiplicity="many" remark="根据userId和借款编号查询">
        SELECT earnings.*,sum(fee.fee_amount) as 'serviceFee'
        FROM AMS_ACCOUNT_EARNINGS earnings,ams_account_earnings_service_fee fee
        WHERE earnings.status=1 and  earnings.service_fee_id = fee.service_fee_id
        <if test="fee_type !='' and fee_type!=null">
            and fee.fee_type=#{feeType,jdbcType=VARCHAR}
        </if>
        <if test="userId !='' and userId != null">
            and earnings.USER_ID = #{userId,jdbcType=VARCHAR}
        </if>
        <if test="boId !='' and boId != null">
            AND earnings.BO_ID = #{boId,jdbcType=VARCHAR}
        </if>
        limit #{pageNo,jdbcType=INTEGER},#{pageRec,jdbcType=INTEGER}
    </operation>
    <operation name="queryEarningsCount"  resulttype="java.lang.Integer"  remark="总条数">
        SELECT count(*)
        FROM AMS_ACCOUNT_EARNINGS earnings,ams_account_earnings_service_fee fee
        WHERE earnings.status=1 and earnings.service_fee_id = fee.service_fee_id
        <if test="fee_type !='' and fee_type!=null">
            and fee.fee_type=#{feeType,jdbcType=VARCHAR}
        </if>
        <if test="userId !='' and userId != null">
            and earnings.USER_ID = #{userId,jdbcType=VARCHAR}
        </if>
        <if test="boId !='' and boId != null">
            AND earnings.BO_ID = #{boId,jdbcType=VARCHAR}
        </if>

    </operation>

</table>
